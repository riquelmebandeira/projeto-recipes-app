{"version":3,"sources":["redux/actions/index.js","utils/recipeInfo.js","utils/FetchApi.js","utils/DetailsPage.js","images/whiteHeartIcon.svg","images/blackHeartIcon.svg","images/shareIcon.svg","images/drinkIcon.svg","images/exploreIcon.svg","images/mealIcon.svg","images/searchIcon.svg","images/profileIcon.svg","components/SearchBar.jsx","redux/reducer/userReducer.js","redux/reducer/recipesReducer.js","redux/reducer/index.js","redux/store/index.js","components/Loading.jsx","components/IngredientsList.jsx","components/StartRecipeBtn.jsx","components/RecommendationCard.jsx","components/RecommendationsList.jsx","components/IconButton.jsx","components/FavoriteButton.jsx","components/ShareButton.jsx","components/RecipeHeader.jsx","components/RecipeDetails.jsx","pages/BebidasDetalhes.jsx","pages/ComidasDetalhes.jsx","components/Footer.jsx","components/Header.jsx","pages/Explorar.jsx","pages/ExplorarBebidas.jsx","pages/ExplorarComidas.jsx","pages/ExplorarComidasArea.jsx","pages/ExplorarIngredients.jsx","pages/Login.jsx","pages/Perfil.jsx","components/Button.jsx","context/RecipesContext.js","components/IngredientSteps.jsx","pages/Progresso.jsx","components/CategoryButtons.jsx","components/RecipeCard.jsx","components/RecipesList.jsx","pages/Receitas.jsx","components/FavoriteRecipeCard.jsx","components/FilterButtons.jsx","pages/ReceitasFavoritas.jsx","components/RecipeMadeMeal.jsx","components/RecipesMadeDrink.jsx","pages/ReceitasFeitas.jsx","services/Router.js","context/RecipesProvider.jsx","App.js","index.js"],"names":["SAVE_USER_LS_DATA","SAVE_RECIPES_LS_DATA","SAVE_RECIPE_LIST","userLsKeys","recipesLsKeys","lsKeys","getLsData","keys","reduce","data","key","localStorage","getItem","JSON","parse","saveLsData","Object","forEach","setItem","stringify","saveRecipesList","type","getRecipes","filterType","searchInput","recipeType","dispatch","a","fetchApi","response","values","clearLsData","clear","saveRecipesLsData","initLsData","getState","user","recipes","loginUser","mealsToken","cocktailsToken","updateRecipeInProgress","recipeId","steps","previousData","inProgressRecipes","updatingKey","API_KEYS","inProgress","newData","toggleFavoriteRecipe","recipe","favoriteRecipes","some","id","filter","area","category","alcoholicOrNot","name","image","saveDate","Date","day","String","getDate","padStart","month","getMonth","year","getFullYear","addDoneRecipe","tags","doneRecipes","doneDate","bebida","base","thumb","title","alcoholic","instructions","comida","getRecipeType","window","location","href","includes","getRecipeURL","origin","convertRecipe","apiRecipe","ingredients","getIngredientsOrMeasures","measures","strTags","split","URLS","exIngredients","first","list","lookup","length","global","alert","fetch","json","request","entries","info","map","array","fetchRecipeById","recipeInfo","fetchRecommendedRecipes","treatVideoUrl","url","hash","pop","module","exports","SearchBar","useState","setSearchInput","setFilterType","history","useHistory","useDispatch","handleClick","resultApi","idKey","push","className","data-testid","value","onChange","e","target","htmlFor","checked","onClick","INITIAL_STATE","email","userReducer","state","action","recipeList","cocktails","meals","recipesReducer","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","Loading","IngredientsList","ingredient","index","StartRecipeBtn","isRecipeDone","useSelector","to","defaultProps","RecommendationCard","isMeal","src","strDrinkThumb","strMealThumb","alt","strAlcoholic","strCategory","strDrink","strMeal","RecommendationsList","recommendations","slice","IconButton","testid","FavoriteButton","isFavorite","blackHeartIcon","whiteHeartIcon","copy","require","ShareButton","urlCopied","setUrlCopied","shareIcon","setTimeout","RecipeHeader","RecipeDetails","props","ingredientsQty","BebidasDetalhes","match","params","setRecipeInfo","setRecommendations","useEffect","idDrink","strInstructions","ComidasDetalhes","idMeal","strArea","strYoutube","Footer","aria-label","drinkIcon","exploreIcon","mealIcon","Header","showSearchBtn","searchBar","setSearchBarTo","profileIcon","searchIcon","Explorar","ExplorarBebidas","fetchAPIRandomDrinks","clickSurprise","getAPI","ExplorarComidas","fetchAPIRandomFoods","ExplorarComidasArea","ExplorarIngredientes","setData","fetchIngredients","drinks","ingredientName","ingre","strIngredient","strIngredient1","Login","setEmail","password","setPassword","disabled","setDisabled","passwordValidate","testEmail","test","personEmail","placeholder","required","Perfil","redirect","Button","undefined","RecipesContext","createContext","IngredientSteps","inProgressKey","setSteps","updatedSteps","step","updateStep","Progresso","setRecipe","loading","useContext","isComplete","then","CategoryButtons","categories","setCategories","filtered","setFiltered","getCategories","responseJson","get","RecipeCard","recipeIndex","recipeImg","recipeName","RecipesList","recipeKey","Receitas","setRecipeType","listRecipes","typeCheck","FavoriteRecipeCard","FilterButtons","classNameBTN","ReceitasFavoritas","console","log","RecipeMadeMeal","tag","RecipeMadeDrink","ReceitasFeitas","Router","exact","path","component","RecipesProvider","children","setLoading","setRecipes","options","Provider","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8400667f.chunk.js","sourcesContent":["import fetchApi from '../../utils/FetchApi';\nimport { API_KEYS } from '../../utils/recipeInfo';\n\n// export const GET_USER_LS_DATA = 'GET_LS_DATA';\nexport const SAVE_USER_LS_DATA = 'SAVE_USER_LS_DATA';\nexport const SAVE_RECIPES_LS_DATA = 'SAVE_RECIPES_LS_DATA';\n\nexport const SAVE_RECIPE_LIST = 'SAVE_RECIPE_LIST';\nconst userLsKeys = ['user', 'mealsToken', 'cocktailsToken'];\nconst recipesLsKeys = ['doneRecipes', 'favoriteRecipes', 'inProgressRecipes'];\nconst lsKeys = [...userLsKeys, ...recipesLsKeys];\n\nconst getLsData = (keys) => keys.reduce((data, key) => {\n  if (localStorage.getItem(key) === null) { return data; }\n  return ({ ...data, [key]: JSON.parse(localStorage.getItem(key)) });\n}, {});\n\nexport const getUserLsData = () => ({\n  type: SAVE_USER_LS_DATA,\n  data: getLsData(userLsKeys),\n});\n\nexport const getRecipesLsData = () => ({\n  type: SAVE_RECIPES_LS_DATA,\n  data: getLsData(recipesLsKeys),\n});\n\nconst saveLsData = (data) => {\n  Object.keys(data).forEach((key) => {\n    localStorage.setItem(key, JSON.stringify(data[key]));\n  });\n};\n\nconst saveUserLsData = (data) => {\n  saveLsData(data);\n  return {\n    type: SAVE_USER_LS_DATA,\n    data,\n  };\n};\n\nexport const saveRecipesList = (data) => ({\n  type: SAVE_RECIPE_LIST,\n  data,\n});\n\nexport const getRecipes = (\n  { filterType = 'name', searchInput = '', recipeType = 'comida' } = {},\n) => async (dispatch) => {\n  // setLoading(true);\n  const response = await fetchApi({\n    recipeType,\n    filterType,\n    searchInput,\n  });\n  dispatch(saveRecipesList(Object.values(response)[0]));\n  // setLoading(false);\n};\n\nexport const clearLsData = () => {\n  lsKeys.forEach((keys) => localStorage.clear(keys));\n};\n\nexport const saveRecipesLsData = (data) => {\n  saveLsData(data);\n  return {\n    type: SAVE_RECIPES_LS_DATA,\n    data,\n  };\n};\n\nexport const initLsData = () => (dispatch, getState) => {\n  userLsKeys.forEach((key) => {\n    if (localStorage.getItem(key) === null && (localStorage.getItem('user') !== null)) {\n      saveLsData({ [key]: getState().user[key] });\n    } else {\n      dispatch({\n        type: SAVE_USER_LS_DATA,\n        data: getLsData([key]),\n      });\n    }\n  });\n  recipesLsKeys.forEach((key) => {\n    if (localStorage.getItem(key) === null) {\n      saveLsData({ [key]: getState().recipes[key] });\n    } else {\n      dispatch({\n        type: SAVE_RECIPES_LS_DATA,\n        data: getLsData([key]),\n      });\n    }\n  });\n};\n\nexport const loginUser = (user) => (dispatch) => {\n  dispatch(saveUserLsData({ user, mealsToken: 1, cocktailsToken: 1 }));\n  // dispatch(initLsData());\n};\n\n// export const loadLsData = () => (dispatch) => {\n//   const user = JSON.parse(localStorage.getItem('user'));\n//   if (user !== null) {\n//     dispatch(getUserLsData());\n//     dispatch(getRecipesLsData());\n//   }\n// };\n\nexport const updateRecipeInProgress = ({ recipeType, recipeId, steps }) => (\n  (dispatch, getState) => {\n    const previousData = getState().recipes.inProgressRecipes;\n    const updatingKey = API_KEYS[recipeType].inProgress;\n\n    // reconstructing data from previous state\n    const newData = {\n      inProgressRecipes: {\n        ...previousData,\n        [updatingKey]: {\n          ...previousData[updatingKey],\n          [recipeId]: steps,\n        },\n      },\n    };\n\n    dispatch(saveRecipesLsData(newData));\n  }\n);\n\nexport const toggleFavoriteRecipe = (recipe) => (\n  (dispatch, getState) => {\n    const { favoriteRecipes } = getState().recipes;\n    if (favoriteRecipes.some(({ id }) => id === recipe.id)) {\n      dispatch(saveRecipesLsData({\n        favoriteRecipes: [\n          ...favoriteRecipes.filter(({ id }) => (id !== recipe.id)),\n        ],\n      }));\n    } else {\n      const { id, area, category, alcoholicOrNot, name, image, type } = recipe;\n      dispatch(saveRecipesLsData({\n        favoriteRecipes: [\n          ...favoriteRecipes,\n          { id, area, category, alcoholicOrNot, name, image, type },\n        ],\n      }));\n    }\n  }\n);\n\nconst saveDate = () => {\n  const data = new Date();\n  const day = String(data.getDate()).padStart(2, '0');\n  const month = String(data.getMonth() + 1).padStart(2, '0');\n  const year = data.getFullYear();\n  const dataAtual = `${day}/${month}/${year}`;\n  return dataAtual;\n};\n\nexport const addDoneRecipe = (\n  { name, image, tags, category, type, id, area, alcoholicOrNot },\n) => (dispatch, getState) => {\n  const { doneRecipes } = getState().recipes;\n  const recipe = {\n    name, image, tags, category, type, id, area, alcoholicOrNot, doneDate: saveDate(),\n  };\n\n  dispatch(saveRecipesLsData({ doneRecipes: [...doneRecipes, recipe] }));\n};\n","import { getIngredientsOrMeasures } from './DetailsPage';\n\nexport const API_KEYS = {\n  bebida: {\n    base: 'Drink',\n    id: 'idDrink',\n    thumb: 'strDrinkThumb',\n    title: 'strDrink',\n    category: 'strCategory',\n    area: 'strArea',\n    alcoholic: 'strAlcoholic',\n    inProgress: 'cocktails',\n    instructions: 'strInstructions',\n  },\n  comida: {\n    base: 'Meal',\n    id: 'idMeal',\n    thumb: 'strMealThumb',\n    title: 'strMeal',\n    category: 'strCategory',\n    area: 'strArea',\n    inProgress: 'meals',\n    instructions: 'strInstructions',\n  },\n};\n\n// pega 'comida' ou 'bebida' (no singular!) com base na URL\nexport function getRecipeType() {\n  return window.location.href.includes('comida') ? 'comida' : 'bebida';\n}\n\nexport const getRecipeURL = (id, type) => ( // type recebe 'comida' ou 'bebida'\n  `${window.location.origin}/${type}s/${id}`\n);\n\nexport const convertRecipe = (apiRecipe, recipeType) => (\n  {\n    id: apiRecipe[API_KEYS[recipeType].id],\n    type: recipeType,\n    area: apiRecipe[API_KEYS[recipeType].area] || '',\n    category: apiRecipe[API_KEYS[recipeType].category],\n    alcoholicOrNot: apiRecipe[API_KEYS[recipeType].alcoholic] || '',\n    name: apiRecipe[API_KEYS[recipeType].title],\n    image: apiRecipe[API_KEYS[recipeType].thumb],\n    ingredients: getIngredientsOrMeasures('Ingredient', apiRecipe),\n    measures: getIngredientsOrMeasures('Measure', apiRecipe),\n    instructions: apiRecipe[API_KEYS[recipeType].instructions],\n    // eslint-disable-next-line max-len\n    tags: recipeType === 'comida' && apiRecipe.strTags ? apiRecipe.strTags.split(',') : [],\n  }\n);\n","const URLS = {\n  bebida: {\n    ingredients: 'https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=',\n    exIngredients: 'https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list',\n    name: 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=',\n    first: 'https://www.thecocktaildb.com/api/json/v1/1/search.php?f=',\n    list: 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=',\n    lookup: 'https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=',\n    category: 'https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=',\n  },\n  comida: {\n    ingredients: 'https://www.themealdb.com/api/json/v1/1/filter.php?i=',\n    exIngredients: 'https://www.themealdb.com/api/json/v1/1/list.php?i=list',\n    name: 'https://www.themealdb.com/api/json/v1/1/search.php?s=',\n    first: 'https://www.themealdb.com/api/json/v1/1/search.php?f=',\n    list: 'https://www.themealdb.com/api/json/v1/1/list.php?c=',\n    lookup: 'https://www.themealdb.com/api/json/v1/1/lookup.php?i=',\n    category: 'https://www.themealdb.com/api/json/v1/1/filter.php?c=',\n  },\n};\n\nconst fetchApi = async (\n  { recipeType = 'comida', filterType = 'name', searchInput = '' } = {},\n) => {\n  if (searchInput.length > 1 && filterType === 'first') {\n    global.alert('Sua busca deve conter somente 1 (um) caracter');\n  } else {\n    const response = await fetch(`${URLS[recipeType][filterType]}${searchInput}`);\n    const json = await response.json();\n    return json;\n  }\n};\n\nexport default fetchApi;\n","import fetchApi from './FetchApi';\n\nexport const getIngredientsOrMeasures = (request, recipe) => {\n  const allInformation = Object.entries(recipe);\n  const requestedInfo = allInformation.filter((info) => (\n    info[0].includes(request) && info[1]\n  ));\n  return requestedInfo.map((array) => array[1]);\n};\n\nexport const fetchRecipeById = async (recipeId, recipeType) => {\n  const data = await fetchApi({\n    recipeType,\n    filterType: 'lookup',\n    searchInput: recipeId,\n  });\n  const recipeInfo = Object.values(data)[0][0];\n  return (\n    { ...recipeInfo,\n      ingredients: getIngredientsOrMeasures('Ingredient', recipeInfo),\n      measures: getIngredientsOrMeasures('Measure', recipeInfo),\n    }\n  );\n};\n\nexport const fetchRecommendedRecipes = async (recipeId, recipeType) => {\n  const data = await fetchApi({ recipeType });\n  return Object.values(data)[0];\n};\n\nexport const treatVideoUrl = (url) => {\n  const hash = url.split('=').pop();\n  return `https://www.youtube.com/embed/${hash}`;\n};\n","module.exports = __webpack_public_path__ + \"static/media/whiteHeartIcon.ea3b6ba8.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackHeartIcon.b8913346.svg\";","module.exports = __webpack_public_path__ + \"static/media/shareIcon.06215ed4.svg\";","module.exports = __webpack_public_path__ + \"static/media/drinkIcon.f87c47c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/exploreIcon.157945ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/mealIcon.b27ba19e.svg\";","module.exports = __webpack_public_path__ + \"static/media/searchIcon.db812135.svg\";","module.exports = __webpack_public_path__ + \"static/media/profileIcon.74e487e5.svg\";","// import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { saveRecipesList } from '../redux/actions';\nimport fetchApi from '../utils/FetchApi';\nimport { API_KEYS, getRecipeType } from '../utils/recipeInfo';\n\nimport '../styles/SearchBar.css';\n\nfunction SearchBar() {\n  const [searchInput, setSearchInput] = useState('');\n  const [filterType, setFilterType] = useState('name');\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const handleClick = async () => {\n    const recipeType = getRecipeType();\n    const resultApi = await fetchApi({\n      filterType,\n      searchInput,\n      recipeType,\n    });\n\n    const recipes = Object.values(resultApi)[0];\n\n    if (recipes === null) {\n      global.alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n    } else if (recipes.length === 1) {\n      const idKey = API_KEYS[recipeType].id;\n      history.push(`/${recipeType}s/${recipes[0][idKey]}`);\n    } else if (recipes.length > 1) {\n      dispatch(saveRecipesList(recipes));\n    }\n  };\n\n  return (\n    <form className=\"search-form\">\n      <input\n        data-testid=\"search-input\"\n        type=\"text\"\n        className=\"search-input\"\n        value={ searchInput }\n        onChange={ (e) => setSearchInput(e.target.value) }\n      />\n      <label htmlFor=\"ingredient-search-radio\">\n        <input\n          data-testid=\"ingredient-search-radio\"\n          id=\"ingredient-search-radio\"\n          type=\"radio\"\n          value=\"ingredients\"\n          checked={ filterType === 'ingredients' }\n          onChange={ () => setFilterType('ingredients') }\n        />\n        Ingrediente\n      </label>\n      <label htmlFor=\"name-search-radio\">\n        <input\n          data-testid=\"name-search-radio\"\n          id=\"name-search-radio\"\n          type=\"radio\"\n          value=\"name\"\n          checked={ filterType === 'name' }\n          onChange={ () => setFilterType('name') }\n        />\n        Nome\n      </label>\n      <label htmlFor=\"first-letter-search-radio\">\n        <input\n          data-testid=\"first-letter-search-radio\"\n          id=\"first-letter-search-radio\"\n          type=\"radio\"\n          value=\"first\"\n          checked={ filterType === 'first' }\n          onChange={ () => setFilterType('first') }\n        />\n        Letra inicial\n      </label>\n      <button\n        data-testid=\"exec-search-btn\"\n        className=\"exec-search-btn\"\n        type=\"button\"\n        onClick={ () => handleClick() }\n      >\n        Buscar\n      </button>\n    </form>\n  );\n}\n\n// SearchBar.propTypes = {\n//   history: PropTypes.shape({\n//     push: PropTypes.func,\n//   }).isRequired,\n// };\n\nexport default SearchBar;\n","import { SAVE_USER_LS_DATA } from '../actions';\n\nconst INITIAL_STATE = {\n  mealsToken: 1,\n  cocktailsToken: 1,\n  user: { email: '' },\n};\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case SAVE_USER_LS_DATA:\n    return {\n      ...state,\n      ...action.data,\n    };\n  default: return state;\n  }\n};\n\nexport default userReducer;\n","import { SAVE_RECIPES_LS_DATA, SAVE_RECIPE_LIST } from '../actions';\n\nconst INITIAL_STATE = {\n  doneRecipes: [],\n  favoriteRecipes: [],\n  recipeList: [],\n  inProgressRecipes: {\n    cocktails: {},\n    meals: {},\n  },\n};\n\nconst recipesReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case SAVE_RECIPES_LS_DATA:\n    return {\n      ...state,\n      ...action.data,\n    };\n  case SAVE_RECIPE_LIST:\n    return {\n      ...state,\n      recipeList: action.data,\n    };\n  default: return state;\n  }\n};\n\nexport default recipesReducer;\n","import { combineReducers } from 'redux';\nimport user from './userReducer';\nimport recipes from './recipesReducer';\n\nconst rootReducer = combineReducers({\n  user,\n  recipes,\n});\n\nexport default rootReducer;\n","import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from '../reducer';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n\nexport default store;\n","import React from 'react';\n\nfunction Loading() {\n  return (\n    <div className=\"loading-message\">Carregando...</div>\n  );\n}\n\nexport default Loading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction IngredientsList({ ingredients, measures }) {\n  return (\n    <section className=\"ingredients\">\n      <h2>Ingredientes</h2>\n      <ul>\n        {\n          ingredients.map((ingredient, index) => (\n            <li\n              key={ index }\n              data-testid={ `${index}-ingredient-name-and-measure` }\n            >\n              {`${ingredient} - ${measures[index]}`}\n            </li>\n          ))\n        }\n      </ul>\n    </section>\n  );\n}\n\nIngredientsList.propTypes = {\n  ingredients: PropTypes.arrayOf(PropTypes.string).isRequired,\n  measures: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default IngredientsList;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { API_KEYS } from '../utils/recipeInfo';\n\nfunction StartRecipeBtn({ recipeId, recipeType, className }) {\n  const isRecipeDone = useSelector((state) => (state.recipes.doneRecipes\n    .some(({ id, type }) => id === recipeId && type === recipeType)\n  ));\n\n  const inProgressRecipes = useSelector((state) => (\n    state.recipes.inProgressRecipes[API_KEYS[recipeType].inProgress]\n  ));\n\n  return !isRecipeDone && (\n    <Link to={ `${recipeId}/in-progress` }>\n      <button type=\"button\" data-testid=\"start-recipe-btn\" className={ className }>\n        { inProgressRecipes[recipeId] ? 'Continuar Receita' : 'Iniciar receita' }\n      </button>\n    </Link>\n  );\n}\n\nStartRecipeBtn.propTypes = {\n  recipeId: PropTypes.string.isRequired,\n  recipeType: PropTypes.string.isRequired,\n  className: PropTypes.string,\n};\n\nStartRecipeBtn.defaultProps = {\n  className: '',\n};\n\nexport default StartRecipeBtn;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/RecipeDetails.css';\nimport { getRecipeType } from '../utils/recipeInfo';\n\nfunction RecommendationCard({ recipe, index }) {\n  const isMeal = getRecipeType() === 'comida';\n\n  return (\n    <div className=\"recommendation-card\">\n      <img\n        src={ isMeal ? recipe.strDrinkThumb : recipe.strMealThumb }\n        alt=\"Foto da receita\"\n        data-testid={ `${index}-recomendation-card` }\n        className=\"card-photo\"\n      />\n      <p>{ isMeal ? recipe.strAlcoholic : recipe.strCategory }</p>\n      <h3 data-testid={ `${index}-recomendation-title` }>\n        {isMeal ? recipe.strDrink : recipe.strMeal }\n      </h3>\n    </div>\n  );\n}\n\nRecommendationCard.propTypes = {\n  recipe: PropTypes.objectOf(PropTypes.string).isRequired,\n  index: PropTypes.number.isRequired,\n};\n\nexport default RecommendationCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport RecommendationCard from './RecommendationCard';\n\nfunction RecommendationsList({ recommendations }) {\n  const MAX_LENGTH = 6;\n  return (\n    <section className=\"recommendations\">\n      <h2>Recomendadas</h2>\n      <div className=\"cards-container\">\n        {\n          recommendations.slice(0, MAX_LENGTH).map(\n            (recipe, index) => (\n              <RecommendationCard key={ index } { ...{ recipe, index } } />),\n          )\n        }\n      </div>\n    </section>\n  );\n}\n\nRecommendationsList.propTypes = {\n  recommendations: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default RecommendationsList;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport '../styles/ReceitasFavoritas.css';\n\nexport default function IconButton({ src, onClick, testid }) {\n  return (\n    <input\n      type=\"image\"\n      className=\"share-icon\"\n      src={ src }\n      alt={ testid }\n      data-testid={ testid }\n      onClick={ onClick }\n    />\n  );\n}\n\nIconButton.propTypes = {\n  onClick: PropTypes.func,\n  src: PropTypes.string,\n  testid: PropTypes.string,\n};\n\nIconButton.defaultProps = {\n  src: '',\n  testid: '',\n  onClick: () => {},\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleFavoriteRecipe } from '../redux/actions';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport IconButton from './IconButton';\n\nexport default function FavoriteButton({ recipe, testid }) {\n  const { id: recipeId } = recipe;\n  const dispatch = useDispatch();\n\n  const favoriteRecipe = () => {\n    dispatch(toggleFavoriteRecipe(recipe));\n  };\n\n  const isFavorite = useSelector(\n    (state) => state.recipes.favoriteRecipes\n      .some(({ id }) => id === recipeId),\n  );\n\n  return (\n    <IconButton\n      name=\"Favoritar\"\n      src={ isFavorite ? blackHeartIcon : whiteHeartIcon }\n      onClick={ () => favoriteRecipe() }\n      testid={ testid }\n    />\n  );\n}\n\nFavoriteButton.propTypes = {\n  recipe: PropTypes.shape({\n    id: PropTypes.string,\n  }).isRequired,\n  testid: PropTypes.string,\n};\n\nFavoriteButton.defaultProps = {\n  testid: 'favorite-btn',\n};\n","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { getRecipeURL } from '../utils/recipeInfo';\nimport shareIcon from '../images/shareIcon.svg';\nimport IconButton from './IconButton';\n\nconst copy = require('clipboard-copy');\n\nexport default function ShareButton({ recipeId, testid, recipeType }) {\n  const [urlCopied, setUrlCopied] = useState(false);\n\n  const shareRecipe = () => {\n    const THREE_SECONDS = 3000;\n    copy(getRecipeURL(recipeId, recipeType));\n    setUrlCopied(true);\n    setTimeout(() => setUrlCopied(false), THREE_SECONDS);\n  };\n\n  return urlCopied ? <div>Link copiado!</div> : (\n    <IconButton\n      name=\"Compartilhar\"\n      src={ shareIcon }\n      onClick={ () => shareRecipe() }\n      testid={ testid }\n    />\n  );\n}\n\nShareButton.propTypes = {\n  recipeId: PropTypes.string.isRequired,\n  recipeType: PropTypes.string.isRequired,\n  testid: PropTypes.string,\n};\n\nShareButton.defaultProps = {\n  testid: 'share-btn',\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { getRecipeType } from '../utils/recipeInfo';\nimport FavoriteButton from './FavoriteButton';\nimport ShareButton from './ShareButton';\nimport '../styles/RecipeHeader.css';\n\nexport default function RecipeHeader({ recipe }) {\n  const { image, name, category, id: recipeId, type, alcoholicOrNot } = recipe;\n  const isMeal = type === 'comida';\n\n  return (\n    <div className=\"recipe-header-container\">\n      <img\n        src={ image }\n        alt=\"Foto da receita\"\n        data-testid=\"recipe-photo\"\n        className=\"header-img\"\n      />\n      <section>\n        <div className=\"info-container\">\n          <h1 data-testid=\"recipe-title\">{name }</h1>\n          <p data-testid=\"recipe-category\">{ isMeal ? category : alcoholicOrNot }</p>\n        </div>\n        <div className=\"btn-container\">\n          <ShareButton recipeId={ recipeId } recipeType={ getRecipeType() } />\n          <FavoriteButton recipe={ recipe } />\n        </div>\n      </section>\n    </div>\n  );\n}\n\nRecipeHeader.propTypes = {\n  recipe: PropTypes.shape({\n    category: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    alcoholicOrNot: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport IngredientsList from './IngredientsList';\nimport StartRecipeBtn from './StartRecipeBtn';\nimport RecommendationsList from './RecommendationsList';\nimport RecipeHeader from './RecipeHeader';\nimport { treatVideoUrl } from '../utils/DetailsPage';\nimport '../styles/RecipeDetails.css';\n\nexport default function RecipeDetails(props) {\n  const { ingredients, measures, recommendations, instructions, url, id, type } = props;\n  const isMeal = type === 'comida';\n\n  return (\n    <>\n      <RecipeHeader recipe={ props } />\n      <main className=\"recipe-details-container\">\n        <article className=\"preparation-method\">\n          <IngredientsList { ...{ ingredients, measures } } />\n          <section className=\"instructions\">\n            <h2>Instruções</h2>\n            <p data-testid=\"instructions\">\n              {instructions}\n            </p>\n          </section>\n          {\n            isMeal && (\n              <section className=\"video-container\">\n                <h2>Video</h2>\n                <iframe\n                  title=\"Video da receita\"\n                  data-testid=\"video\"\n                  src={ treatVideoUrl(url) }\n                />\n              </section>\n            )\n          }\n        </article>\n        <RecommendationsList { ...{ recommendations } } />\n        <StartRecipeBtn\n          recipeId={ id }\n          recipeType={ type }\n          ingredientsQty={ ingredients.length }\n          className=\"bottom-btn\"\n        />\n      </main>\n    </>\n  );\n}\n\nRecipeDetails.propTypes = {\n  category: PropTypes.string,\n  alcoholicOrNot: PropTypes.string,\n  name: PropTypes.string,\n  image: PropTypes.string,\n  ingredients: PropTypes.arrayOf(PropTypes.string),\n  measures: PropTypes.arrayOf(PropTypes.string),\n  recommendations: PropTypes.arrayOf(PropTypes.object),\n}.isRequired;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Loading from '../components/Loading';\nimport RecipeDetails from '../components/RecipeDetails';\nimport { fetchRecipeById, fetchRecommendedRecipes } from '../utils/DetailsPage';\n\nexport default function BebidasDetalhes({ match: { params: { id } } }) {\n  const [recipeInfo, setRecipeInfo] = useState();\n  const [recommendations, setRecommendations] = useState();\n\n  useEffect(() => {\n    (async () => {\n      setRecommendations(await fetchRecommendedRecipes(id, 'comida'));\n      setRecipeInfo(await fetchRecipeById(id, 'bebida'));\n    })();\n  }, [id]);\n\n  return (!recipeInfo || !recommendations) ? <Loading /> : (<RecipeDetails\n    id={ recipeInfo.idDrink }\n    type=\"bebida\"\n    area=\"\"\n    category={ recipeInfo.strCategory }\n    alcoholicOrNot={ recipeInfo.strAlcoholic }\n    name={ recipeInfo.strDrink }\n    image={ recipeInfo.strDrinkThumb }\n    ingredients={ recipeInfo.ingredients }\n    measures={ recipeInfo.measures }\n    recommendations={ recommendations }\n    instructions={ recipeInfo.strInstructions }\n    url=\"\"\n  />);\n}\n\nBebidasDetalhes.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Loading from '../components/Loading';\nimport RecipeDetails from '../components/RecipeDetails';\nimport { fetchRecipeById, fetchRecommendedRecipes } from '../utils/DetailsPage';\n\nexport default function ComidasDetalhes({ match: { params: { id } } }) {\n  const [recipeInfo, setRecipeInfo] = useState();\n  const [recommendations, setRecommendations] = useState();\n\n  useEffect(() => {\n    (async () => {\n      setRecommendations(await fetchRecommendedRecipes(id, 'bebida'));\n      setRecipeInfo(await fetchRecipeById(id, 'comida'));\n    })();\n  }, [id]);\n\n  return (!recipeInfo || !recommendations) ? <Loading /> : (<RecipeDetails\n    id={ recipeInfo.idMeal }\n    type=\"comida\"\n    area={ recipeInfo.strArea }\n    category={ recipeInfo.strCategory }\n    alcoholicOrNot=\"\"\n    name={ recipeInfo.strMeal }\n    image={ recipeInfo.strMealThumb }\n    ingredients={ recipeInfo.ingredients }\n    measures={ recipeInfo.measures }\n    recommendations={ recommendations }\n    instructions={ recipeInfo.strInstructions }\n    url={ recipeInfo.strYoutube }\n  />);\n}\n\nComidasDetalhes.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport '../styles/Footer.css';\nimport { Link } from 'react-router-dom';\nimport drinkIcon from '../images/drinkIcon.svg';\nimport exploreIcon from '../images/exploreIcon.svg';\nimport mealIcon from '../images/mealIcon.svg';\n\nexport default function Footer() {\n  return (\n    <footer>\n      <nav className=\"footer-container\" data-testid=\"footer\" aria-label=\"Footer\">\n        <Link to=\"/bebidas\">\n          <img\n            data-testid=\"drinks-bottom-btn\"\n            type=\"button\"\n            src={ drinkIcon }\n            alt=\"Drinks\"\n          />\n        </Link>\n        <Link to=\"/explorar\">\n          <img\n            data-testid=\"explore-bottom-btn\"\n            type=\"button\"\n            src={ exploreIcon }\n            alt=\"Explore\"\n          />\n        </Link>\n        <Link to=\"/comidas\">\n          <img\n            data-testid=\"food-bottom-btn\"\n            type=\"button\"\n            src={ mealIcon }\n            alt=\"Food\"\n          />\n        </Link>\n      </nav>\n    </footer>\n  );\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport searchIcon from '../images/searchIcon.svg';\nimport profileIcon from '../images/profileIcon.svg';\nimport SearchBar from './SearchBar';\nimport '../styles/Header.css';\n\nfunction Header(props) {\n  const { title, showSearchBtn, className } = props;\n  const [searchBar, setSearchBarTo] = useState(false);\n  return (\n    <>\n      <header className={ className }>\n        <div>\n          <Link to=\"/perfil\">\n            <input\n              type=\"image\"\n              src={ profileIcon }\n              data-testid=\"profile-top-btn\"\n              alt=\"Foto de perfil\"\n            />\n          </Link>\n          <h1 className=\"title\" data-testid=\"page-title\">{title}</h1>\n          {showSearchBtn && (\n            <input\n              type=\"image\"\n              src={ searchIcon }\n              alt=\"Ícone de lupa\"\n              data-testid=\"search-top-btn\"\n              onClick={ () => setSearchBarTo(!searchBar) }\n            />)}\n        </div>\n      </header>\n      {\n        searchBar && <SearchBar />\n      }\n    </>\n  );\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n  showSearchBtn: PropTypes.bool,\n  className: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  showSearchBtn: true,\n  className: '',\n};\n\nexport default Header;\n","import React from 'react';\nimport { useHistory } from 'react-router';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\n\nimport '../styles/Explorar.css';\n\nexport default function Explorar() {\n  const history = useHistory();\n\n  const clickFoods = () => {\n    history.push('/explorar/comidas');\n  };\n\n  const clickDrinks = () => {\n    history.push('/explorar/bebidas');\n  };\n\n  return (\n    <>\n      <Header title=\"Explorar\" showSearchBtn={ false } className=\"alternative-header\" />\n      <main className=\"explore-page-container\">\n        <section className=\"explore-options\">\n          <button\n            type=\"button\"\n            name=\"comidas\"\n            onClick={ clickFoods }\n            data-testid=\"explore-food\"\n            className=\"button\"\n          >\n            Explorar Comidas\n          </button>\n          <button\n            type=\"button\"\n            name=\"bebidas\"\n            onClick={ clickDrinks }\n            data-testid=\"explore-drinks\"\n            className=\"button\"\n          >\n            Explorar Bebidas\n          </button>\n        </section>\n        <Footer />\n      </main>\n    </>\n  );\n}\n","import React from 'react';\nimport { useHistory } from 'react-router';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\n\nexport default function ExplorarBebidas() {\n  const history = useHistory();\n\n  const clickIngredients = () => {\n    history.push('/explorar/bebidas/ingredientes');\n  };\n\n  const fetchAPIRandomDrinks = async () => {\n    const drinkSurpriseAPI = 'https://www.thecocktaildb.com/api/json/v1/1/random.php';\n    const response = await fetch(drinkSurpriseAPI);\n    const data = await response.json();\n    return data;\n  };\n\n  const clickSurprise = async () => {\n    const getAPI = await fetchAPIRandomDrinks();\n    history.push(`/bebidas/${Object.values(getAPI)[0][0].idDrink}`);\n  };\n\n  return (\n    <>\n      <Header\n        title=\"Explorar Bebidas\"\n        showSearchBtn={ false }\n        className=\"alternative-header\"\n      />\n      <main className=\"explore-page-container\">\n        <section className=\"explore-options\">\n          <button\n            type=\"button\"\n            data-testid=\"explore-by-ingredient\"\n            onClick={ clickIngredients }\n            className=\"button\"\n          >\n            Por Ingredientes\n          </button>\n          <button\n            type=\"button\"\n            data-testid=\"explore-surprise\"\n            onClick={ clickSurprise }\n            className=\"button\"\n          >\n            Me Surpreenda!\n          </button>\n        </section>\n      </main>\n      <Footer />\n    </>\n  );\n}\n","import React from 'react';\nimport { useHistory } from 'react-router';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\n\nexport default function ExplorarComidas() {\n  const history = useHistory();\n\n  const clickIngredients = () => {\n    history.push('/explorar/comidas/ingredientes');\n  };\n\n  const clickArea = () => {\n    history.push('/explorar/comidas/area');\n  };\n\n  const fetchAPIRandomFoods = async () => {\n    const foodSurpriseAPI = 'https://www.themealdb.com/api/json/v1/1/random.php';\n    const response = await fetch(foodSurpriseAPI);\n    const data = await response.json();\n    return data;\n  };\n\n  const clickSurprise = async () => {\n    const getAPI = await fetchAPIRandomFoods();\n    history.push(`/comidas/${Object.values(getAPI)[0][0].idMeal}`);\n  };\n\n  return (\n    <>\n      <Header\n        title=\"Explorar Comidas\"\n        showSearchBtn={ false }\n        className=\"alternative-header\"\n      />\n      <main className=\"explore-page-container\">\n        <section className=\"explore-options\">\n          <button\n            type=\"button\"\n            data-testid=\"explore-by-ingredient\"\n            onClick={ clickIngredients }\n            className=\"button\"\n          >\n            Por Ingredientes\n          </button>\n          <button\n            type=\"button\"\n            data-testid=\"explore-by-area\"\n            onClick={ clickArea }\n            className=\"button\"\n          >\n            Por Local de Origem\n          </button>\n          <button\n            type=\"button\"\n            data-testid=\"explore-surprise\"\n            onClick={ clickSurprise }\n            className=\"button\"\n          >\n            Me Surpreenda!\n          </button>\n        </section>\n      </main>\n      <Footer />\n    </>\n  );\n}\n","import React from 'react';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\n\nexport default function ExplorarComidasArea() {\n  return (\n    <section className=\"content-container\">\n      <Header title=\"Explorar Origem\" className=\"alternative-header\" />\n      <Footer />\n    </section>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport { saveRecipesList } from '../redux/actions';\nimport fetchApi from '../utils/FetchApi';\nimport { getRecipeType } from '../utils/recipeInfo';\nimport '../styles/ExplorarIngredientes.css';\n\nexport default function ExplorarIngredientes() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [data, setData] = useState([]);\n  const NUMBER = 12;\n  const recipeType = getRecipeType();\n\n  const fetchIngredients = async () => {\n    const resultApi = await fetchApi({\n      recipeType,\n      filterType: 'exIngredients',\n      searchInput: '',\n    });\n    const recipes = recipeType === 'comida'\n      ? resultApi.meals.slice(0, NUMBER) : resultApi.drinks.slice(0, NUMBER);\n    setData(recipes);\n  };\n\n  useEffect(() => { fetchIngredients(); }, []);\n\n  const getImgSrc = (ingredient) => (recipeType === 'comida'\n    ? `https://www.themealdb.com/images/ingredients/${ingredient}-Small.png`\n    : `https://www.thecocktaildb.com/images/ingredients/${ingredient}-Small.png`);\n\n  const handleClick = async (ingredientName) => {\n    const resultApi = await fetchApi({\n      recipeType,\n      filterType: 'ingredients',\n      searchInput: ingredientName,\n    });\n    const recipe = recipeType === 'comida'\n      ? resultApi.meals : resultApi.drinks;\n    dispatch(saveRecipesList(recipe));\n    history.push(`/${recipeType}s`);\n  };\n  return (\n    <>\n      <Header\n        title=\"Explorar Ingredientes\"\n        showSearchBtn={ false }\n        className=\"alternative-header\"\n      />\n      <main className=\"ingredients-container\">\n        { data.map((ingre, index) => (\n          <section key={ index } className=\"ingredient-card\">\n            <button\n              data-testid={ `${index}-ingredient-card` }\n              type=\"button\"\n              onClick={ () => handleClick(ingre.strIngredient || ingre.strIngredient1) }\n            >\n              <img\n                data-testid={ `${index}-card-img` }\n                src={ getImgSrc(ingre.strIngredient || ingre.strIngredient1) }\n                alt={ ingre.strIngredient || ingre.strIngredient1 }\n              />\n            </button>\n            <p\n              data-testid={ `${index}-card-name` }\n            >\n              { ingre.strIngredient || ingre.strIngredient1 }\n            </p>\n          </section>\n        )) }\n      </main>\n      <Footer />\n    </>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { loginUser } from '../redux/actions';\nimport '../styles/Login.css';\n\nfunction Login() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [disabled, setDisabled] = useState(true);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const MIN_CHARACTERES_PASSWORD = 7;\n    const passwordValidate = password.length >= MIN_CHARACTERES_PASSWORD;\n\n    const testEmail = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w\\w+)+$/.test(email);\n\n    if (testEmail && passwordValidate) {\n      setDisabled(false);\n    } else {\n      setDisabled(true);\n    }\n  }, [email, password]);\n\n  // formato do personEmail = { email: email} -> é um objeto\n  const personEmail = { email };\n\n  const handleClick = () => {\n    localStorage.setItem('mealsToken', '1');\n    localStorage.setItem('cocktailsToken', '1');\n    dispatch(loginUser(personEmail));\n    history.push('/comidas');\n  };\n\n  return (\n    <main className=\"login-container\">\n      <h1>Let&apos;s Cook!</h1>\n      <section>\n        <form className=\"form-container\">\n          <input\n            className=\"box-text\"\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            value={ email }\n            data-testid=\"email-input\"\n            onChange={ (e) => setEmail(e.target.value) }\n            required\n          />\n\n          <input\n            className=\"box-text\"\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            data-testid=\"password-input\"\n            value={ password }\n            onChange={ (e) => setPassword(e.target.value) }\n            required\n          />\n          <button\n            className=\"btn-form\"\n            type=\"button\"\n            data-testid=\"login-submit-btn\"\n            disabled={ disabled }\n            onClick={ handleClick }\n          >\n            Entrar\n          </button>\n        </form>\n      </section>\n    </main>\n  );\n}\n\nexport default Login;\n","import React from 'react';\nimport { useHistory } from 'react-router';\nimport { useSelector } from 'react-redux';\nimport { clearLsData } from '../redux/actions';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\n\nimport '../styles/Perfil.css';\n\nexport default function Perfil() {\n  const { user } = useSelector((state) => state.user);\n  const email = user === null ? '' : user.email;\n  const history = useHistory();\n\n  const redirect = (e) => {\n    if (e.value === 'recipe-favorite') {\n      history.push('/receitas-favoritas');\n    } else if (e.value === 'recipe-done') {\n      history.push('/receitas-feitas');\n    } else {\n      clearLsData();\n      history.push('/');\n    }\n  };\n\n  return (\n    <>\n      <Header title=\"Perfil\" showSearchBtn={ false } className=\"alternative-header\" />\n      <Footer />\n      <main className=\"container-main\">\n        <section className=\"box\">\n\n          <h3\n            data-testid=\"profile-email\"\n            className=\"profile-email\"\n          >\n            { email }\n\n          </h3>\n          <button\n            type=\"button\"\n            className=\"button\"\n            data-testid=\"profile-done-btn\"\n            value=\"recipe-done\"\n            onClick={ (e) => redirect(e.target) }\n          >\n            Receitas Feitas\n          </button>\n          <button\n            type=\"button\"\n            className=\"button\"\n            data-testid=\"profile-favorite-btn\"\n            value=\"recipe-favorite\"\n            onClick={ (e) => redirect(e.target) }\n          >\n            Receitas Favoritas\n          </button>\n          <button\n            type=\"button\"\n            className=\"button\"\n            data-testid=\"profile-logout-btn\"\n            value=\"exit\"\n            onClick={ (e) => redirect(e.target) }\n          >\n            Sair\n          </button>\n        </section>\n      </main>\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nexport default function Button({ className, name, onClick, testid, disabled, value }) {\n  return (\n    <button\n      type=\"button\"\n      className={ className }\n      onClick={ onClick }\n      data-testid={ testid }\n      disabled={ disabled }\n      value={ value }\n    >\n      { name }\n    </button>\n  );\n}\n\nButton.propTypes = {\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  name: PropTypes.string,\n  onClick: PropTypes.func,\n  testid: PropTypes.string,\n  value: PropTypes.string,\n};\n\nButton.defaultProps = {\n  name: 'Botão',\n  disabled: false,\n  onClick: undefined,\n  testid: undefined,\n  value: undefined,\n  className: undefined,\n};\n","import { createContext } from 'react';\n\nconst RecipesContext = createContext();\n\nexport default RecipesContext;\n","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateRecipeInProgress } from '../redux/actions';\nimport { API_KEYS } from '../utils/recipeInfo';\n\nconst IngredientSteps = ({ recipe }) => {\n  const { type: recipeType, id: recipeId, ingredients, measures } = recipe;\n  const inProgressKey = API_KEYS[recipeType].inProgress;\n  const inProgress = useSelector(\n    (state) => state.recipes.inProgressRecipes[inProgressKey],\n  );\n  const [steps, setSteps] = useState(inProgress[recipeId] || []);\n\n  const dispatch = useDispatch();\n  const updateStep = (ingredient) => {\n    const updatedSteps = steps.includes(ingredient)\n      ? steps.filter((step) => step !== ingredient)\n      : [...steps, ingredient];\n    setSteps(updatedSteps);\n    dispatch(updateRecipeInProgress(\n      { recipeType, recipeId, steps: updatedSteps },\n    ));\n  };\n\n  return (\n    <section className=\"ingredients\">\n      <h2>Ingredientes</h2>\n      <ul>\n        { ingredients.map((ingredient, index) => (\n          <li key={ `${index}-ingredient-step` }>\n            <label\n              htmlFor={ `${index}-ingredient-step` }\n              data-testid={ `${index}-ingredient-step` }\n            >\n              <input\n                type=\"checkbox\"\n                id={ `${index}-ingredient-step` }\n                checked={ steps.includes(ingredient) }\n                name={ ingredient }\n                onChange={ () => updateStep(ingredient) }\n              />\n              {`${ingredient} - ${measures[index]}`}\n            </label>\n          </li>\n        )) }\n      </ul>\n    </section>\n  );\n};\n\nIngredientSteps.propTypes = {\n  recipe: PropTypes.shape({\n    ingredients: PropTypes.arrayOf(PropTypes.string),\n    measures: PropTypes.arrayOf(PropTypes.string),\n    id: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default IngredientSteps;\n","import React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport fetchApi from '../utils/FetchApi';\nimport { API_KEYS, convertRecipe, getRecipeType } from '../utils/recipeInfo';\n\nimport Button from '../components/Button';\nimport RecipeHeader from '../components/RecipeHeader';\nimport RecipesContext from '../context/RecipesContext';\nimport Loading from '../components/Loading';\nimport IngredientSteps from '../components/IngredientSteps';\nimport { addDoneRecipe } from '../redux/actions';\n\nimport '../styles/RecipeDetails.css';\n\nexport default function Progresso({ match: { params: { id } } }) {\n  const recipeType = getRecipeType();\n  const [recipe, setRecipe] = useState(null);\n  const { loading } = useContext(RecipesContext);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  // check if all ingredients (steps) are checked\n  const { [id]: inProgress } = useSelector(\n    (state) => state.recipes.inProgressRecipes[API_KEYS[recipeType].inProgress],\n  );\n  const isComplete = recipe && inProgress\n    ? inProgress.length === recipe.ingredients.length\n    : false;\n\n  useEffect(() => {\n    fetchApi({ recipeType, filterType: 'lookup', searchInput: id })\n      .then((json) => Object.values(json)[0])\n      .then((recipes) => setRecipe(convertRecipe(recipes[0], recipeType)));\n  }, [id, recipeType]);\n\n  return loading || !recipe ? <Loading /> : (\n    <>\n      <RecipeHeader recipe={ recipe } />\n      <section className=\"recipe-details-container\">\n        <IngredientSteps recipe={ recipe } />\n        <section className=\"in-progress-instructions\">\n          <h2>Instruções</h2>\n          <p data-testid=\"instructions\">{recipe.instructions}</p>\n        </section>\n        <Button\n          name=\"Finalizar Receita\"\n          testid=\"finish-recipe-btn\"\n          className=\"bottom-btn\"\n          onClick={ () => {\n            dispatch(addDoneRecipe(recipe));\n            history.push('/receitas-feitas');\n          } }\n          disabled={ !isComplete }\n        />\n      </section>\n    </>\n  );\n}\n\nProgresso.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getRecipes } from '../redux/actions';\nimport fetchApi from '../utils/FetchApi';\nimport '../styles/CategoryButtons.css';\n\nfunction CategoryButtons({ recipeType }) {\n  const dispatch = useDispatch();\n  const [categories, setCategories] = useState([]);\n  const [filtered, setFiltered] = useState('');\n  const FIVE_CATEGORIES = 5;\n  const getCategories = async () => {\n    const responseJson = await fetchApi({\n      recipeType,\n      filterType: 'list', // nome da chave\n      searchInput: 'list',\n    });\n    setCategories(Object.values(responseJson)[0]);\n  };\n\n  useEffect(() => {\n    getCategories(); // eslint-disable-next-line\n  }, [recipeType]);\n\n  return (\n    <section className=\"category-buttons\">\n      <button\n        className=\"buttons\"\n        type=\"button\"\n        key=\"all\"\n        data-testid=\"All-category-filter\"\n        value=\"list\"\n        onClick={ () => {\n          setFiltered('');\n          dispatch(getRecipes({ recipeType }));\n        } }\n      >\n        All\n      </button>\n      {categories.slice(0, FIVE_CATEGORIES).map((get, index) => (\n        <button\n          className=\"buttons\"\n          type=\"button\"\n          key={ index }\n          data-testid={ `${get.strCategory}-category-filter` }\n          onClick={ () => {\n            if (filtered === get.strCategory) {\n              setFiltered('');\n              dispatch(getRecipes({ recipeType }));\n            } else {\n              setFiltered(get.strCategory);\n              dispatch(getRecipes(\n                { filterType: 'category', searchInput: get.strCategory, recipeType },\n              ));\n            }\n          } }\n        >\n          { get.strCategory }\n        </button>\n      ))}\n    </section>\n  );\n}\n\nCategoryButtons.propTypes = {\n  recipeType: PropTypes.string.isRequired,\n};\n\nexport default CategoryButtons;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/RecipeCard.css';\n\nfunction RecipeCard({ recipeIndex, recipeImg, recipeName, recipeType, recipeId }) {\n  return (\n    <div className=\"recipe-card\">\n      <Link\n        to={ `${recipeType}s/${recipeId}` }\n        key={ recipeIndex }\n        data-testid={ `${recipeIndex}-recipe-card` }\n      >\n        <img\n          src={ recipeImg }\n          alt=\"img\"\n          className=\"recipe-img\"\n          data-testid={ `${recipeIndex}-card-img` }\n        />\n        <li\n          className=\"recipe-name\"\n          data-testid={ `${recipeIndex}-card-name` }\n        >\n          {recipeName}\n        </li>\n      </Link>\n    </div>\n  );\n}\n\nRecipeCard.propTypes = {\n  recipeId: PropTypes.string.isRequired,\n  recipeImg: PropTypes.string.isRequired,\n  recipeIndex: PropTypes.number.isRequired,\n  recipeName: PropTypes.string.isRequired,\n  recipeType: PropTypes.string.isRequired,\n};\n\nexport default RecipeCard;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { API_KEYS, getRecipeType } from '../utils/recipeInfo';\nimport RecipeCard from './RecipeCard';\nimport Loading from './Loading';\n\nfunction RecipesList({ recipes }) {\n  const recipeType = getRecipeType();\n\n  const recipeKey = API_KEYS[recipeType].base;\n\n  // verifica se a lista de receitas foi atualizada após redirecionar de comidas para bebidas, e vice-versa.\n  const verification = recipes[0] && recipes[0][`id${recipeKey}`];\n\n  return !verification ? <Loading /> : (\n    <section className=\"recipe-list\">\n      { recipes.map((recipe, recipeIndex) => (\n        <RecipeCard\n          key={ recipe[`id${recipeKey}`] }\n          recipeIndex={ recipeIndex }\n          recipeImg={ recipe[`str${recipeKey}Thumb`] }\n          recipeName={ recipe[`str${recipeKey}`] }\n          recipeType={ recipeType }\n          recipeId={ recipe[`id${recipeKey}`] }\n        />\n      ))}\n    </section>\n  );\n}\n\nRecipesList.propTypes = {\n  recipes: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default RecipesList;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport CategoryButtons from '../components/CategoryButtons';\nimport RecipesList from '../components/RecipesList';\nimport { getRecipeType } from '../utils/recipeInfo';\nimport { getRecipes } from '../redux/actions';\nimport '../styles/Receitas.css';\n\nexport default function Receitas() {\n  const [recipeType, setRecipeType] = useState('comida');\n  const { recipeList } = useSelector((state) => state.recipes);\n  const dispatch = useDispatch();\n  const TWELVE_MEALSORDRINK = 12;\n  const listRecipes = recipeList.slice(0, TWELVE_MEALSORDRINK);\n\n  useEffect(() => {\n    const typeCheck = getRecipeType();\n\n    if (typeCheck !== recipeType || recipeList.length < 1) {\n      dispatch(getRecipes({ recipeType: typeCheck }));\n      setRecipeType(typeCheck);\n    }\n  });\n\n  return (\n    <>\n      <Header\n        title={ recipeType === 'comida' ? 'Comidas' : 'Bebidas' }\n        className=\"header-container\"\n      />\n      <main className=\"content-container\">\n        <CategoryButtons recipeType={ recipeType } />\n        <RecipesList recipeType={ recipeType } recipes={ listRecipes } />\n        <Footer />\n      </main>\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport ShareButton from './ShareButton';\nimport FavoriteButton from './FavoriteButton';\nimport '../styles/ReceitasFavoritas.css';\n\nfunction FavoriteRecipeCard({ index, recipe }) {\n  const { category, image, type, id, name, area, alcoholicOrNot } = recipe;\n  return (\n    <li\n      key={ index }\n      className=\"favorite-recipe-card\"\n    >\n      <Link\n        to={ `${type}s/${id}` }\n        data-testid={ `${index}-recipe-card` }\n      >\n        <img\n          src={ image }\n          alt={ `favorite recipe ${index}` }\n          data-testid={ `${index}-horizontal-image` }\n          className=\"favorite-recipe-photo recipeImgg\"\n        />\n      </Link>\n      <div>\n        <section className=\"favorite-recipe-info\">\n          <span\n            data-testid={ `${index}-horizontal-top-text` }\n            className=\"category-text\"\n          >\n            { type.includes('comida') ? `${area} - ${category}` : alcoholicOrNot }\n          </span>\n          <Link\n            to={ `${type}s/${id}` }\n            className=\"recipe-name\"\n          >\n            <span\n              className=\"txt\"\n              data-testid={ `${index}-horizontal-name` }\n            >\n              {name}\n            </span>\n          </Link>\n        </section>\n        <section className=\"media-btn-container\">\n          <ShareButton\n            testid={ `${index}-horizontal-share-btn` }\n            recipeId={ id }\n            recipeType={ type }\n          />\n          <FavoriteButton\n            testid={ `${index}-horizontal-favorite-btn` }\n            recipe={ recipe }\n          />\n        </section>\n      </div>\n    </li>\n  );\n}\n\nFavoriteRecipeCard.propTypes = {\n  index: PropTypes.number.isRequired,\n  recipe: PropTypes.shape({\n    alcoholicOrNot: PropTypes.string,\n    area: PropTypes.string,\n    category: PropTypes.string,\n    id: PropTypes.string,\n    image: PropTypes.string,\n    name: PropTypes.string,\n    type: PropTypes.string,\n  }).isRequired,\n};\n\nexport default FavoriteRecipeCard;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Button from './Button';\n\nimport '../styles/ReceitasFeitas.css';\n\nexport default function FilterButtons({ onClick }) {\n  return (\n    <section className=\"btn-filter-container\">\n      <Button\n        testid=\"filter-by-all-btn\"\n        name=\"All\"\n        value=\"\"\n        onClick={ onClick }\n        classNameBTN=\"btn-filter\"\n      />\n      <Button\n        testid=\"filter-by-food-btn\"\n        name=\"Food\"\n        value=\"comida\"\n        onClick={ onClick }\n        classNameBTN=\"btn-filter\"\n      />\n      <Button\n        testid=\"filter-by-drink-btn\"\n        name=\"Drinks\"\n        value=\"bebida\"\n        onClick={ onClick }\n        classNameBTN=\"btn-filter\"\n      />\n    </section>\n  );\n}\n\nFilterButtons.propTypes = {\n  onClick: PropTypes.func,\n};\n\nFilterButtons.defaultProps = {\n  onClick: () => {},\n};\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport FavoriteRecipeCard from '../components/FavoriteRecipeCard';\nimport FilterButtons from '../components/FilterButtons';\nimport Header from '../components/Header';\nimport '../styles/ReceitasFavoritas.css';\n\nexport default function ReceitasFavoritas() {\n  const [filterType, setFilterType] = useState('');\n  const favoriteRecipes = useSelector((state) => state.recipes.favoriteRecipes);\n\n  const changeFilter = ({ target }) => setFilterType(target.value);\n\n  return (\n    <>\n      <Header\n        title=\"Receitas Favoritas\"\n        showSearchBtn={ false }\n        className=\"alternative-header\"\n      />\n      <main className=\"content-container\">\n        <FilterButtons onClick={ changeFilter } />\n        <section className=\"recipe-list\">\n          { favoriteRecipes.filter(({ type }) => type.includes(filterType))\n            .map((recipe, index) => {\n              console.log('recipe', recipe);\n              return (\n                <FavoriteRecipeCard key={ recipe.id } index={ index } recipe={ recipe } />\n              );\n            })}\n        </section>\n      </main>\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport ShareButton from './ShareButton';\n\nexport default function RecipeMadeMeal({ recipe, index }) {\n  const { image, name, category, area, doneDate, tags, id, type } = recipe;\n  return (\n\n    <li className=\"made-recipe-card\" key={ id }>\n      <Link\n        to={ `${type}s/${id}` }\n      >\n        <img\n          src={ image }\n          alt=\"img\"\n          className=\"made-recipe-img\"\n          data-testid={ `${index}-horizontal-image` }\n        />\n      </Link>\n      <section className=\"made-recipe-info\">\n        <p\n          data-testid={ `${index}-horizontal-top-text` }\n          className=\"category-text\"\n        >\n          {`${area} - ${category}`}\n        </p>\n\n        <Link\n          to={ `${type}s/${id}` }\n          data-testid={ `${index}-horizontal-name` }\n          className=\"recipe-name\"\n        >\n          {name}\n        </Link>\n        <p\n          data-testid={ `${index}-horizontal-done-date` }\n          className=\"done-date\"\n        >\n          {doneDate}\n        </p>\n        <p\n          className=\"recipe-tags\"\n        >\n          {\n            tags.slice(0, 2).map((tag) => (\n              <span\n                key={ tag }\n                data-testid={ `${index}-${tag}-horizontal-tag` }\n              >\n                {tag}\n              </span>\n            ))\n          }\n        </p>\n      </section>\n      <ShareButton\n        testid={ `${index}-horizontal-share-btn` }\n        recipeId={ id }\n        recipeType={ type }\n      />\n    </li>\n  );\n}\n\nRecipeMadeMeal.propTypes = {\n  index: PropTypes.number.isRequired,\n  recipe: PropTypes.shape({\n    area: PropTypes.string,\n    category: PropTypes.string,\n    doneDate: PropTypes.string,\n    id: PropTypes.string,\n    image: PropTypes.string,\n    name: PropTypes.string,\n    type: PropTypes.string,\n    tags: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport ShareButton from './ShareButton';\n\nexport default function RecipeMadeDrink({ recipe, index }) {\n  const { image, name, alcoholicOrNot, doneDate, id, type } = recipe;\n  return (\n    <li className=\"made-recipe-card\" key={ id }>\n      <Link\n        to={ `${type}s/${id}` }\n      >\n        <img\n          src={ image }\n          alt=\"img\"\n          className=\"made-recipe-img\"\n          data-testid={ `${index}-horizontal-image` }\n        />\n      </Link>\n      <section className=\"made-recipe-info\">\n        <p\n          data-testid={ `${index}-horizontal-top-text` }\n          className=\"category-text\"\n        >\n          {alcoholicOrNot}\n        </p>\n        <Link\n          to={ `${type}s/${id}` }\n          data-testid={ `${index}-horizontal-name` }\n          className=\"recipe-name\"\n        >\n          {name}\n        </Link>\n        <p\n          data-testid={ `${index}-horizontal-done-date` }\n          className=\"done-date\"\n        >\n          {doneDate}\n        </p>\n      </section>\n      <ShareButton\n        testid={ `${index}-horizontal-share-btn` }\n        recipeId={ id }\n        recipeType={ type }\n      />\n    </li>\n  );\n}\n\nRecipeMadeDrink.propTypes = {\n  index: PropTypes.number.isRequired,\n  recipe: PropTypes.shape({\n    alcoholicOrNot: PropTypes.string,\n    doneDate: PropTypes.string,\n    id: PropTypes.string,\n    image: PropTypes.string,\n    name: PropTypes.string,\n    type: PropTypes.string,\n  }).isRequired,\n};\n","/* eslint-disable max-len */\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Header from '../components/Header';\nimport FilterButtons from '../components/FilterButtons';\nimport '../styles/Receitas.css';\nimport RecipeMadeMeal from '../components/RecipeMadeMeal';\nimport RecipeMadeDrink from '../components/RecipesMadeDrink';\n\nimport '../styles/ReceitasFeitas.css';\n\nexport default function ReceitasFeitas() {\n  const doneRecipes = useSelector((state) => state.recipes.doneRecipes);\n  const [filterType, setFilterType] = useState('');\n\n  const changeFilterType = ({ target }) => {\n    setFilterType(target.value);\n  };\n\n  return (\n    <>\n      <Header title=\"Receitas Feitas\" showSearchBtn={ false } className=\"alternative-header\" />\n      <main className=\"content-container\">\n        <FilterButtons onClick={ changeFilterType } />\n        <section className=\"recipe-list\">\n          {\n            doneRecipes.filter(({ type }) => type.includes(filterType))\n              .map((recipe, index) => (\n                recipe.type === 'comida'\n                  ? <RecipeMadeMeal key={ recipe.id } recipe={ recipe } index={ index } />\n                  : <RecipeMadeDrink key={ recipe.id } recipe={ recipe } index={ index } />\n              ))\n          }\n        </section>\n      </main>\n    </>\n  );\n}\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport BebidasDetalhes from '../pages/BebidasDetalhes';\nimport ComidasDetalhes from '../pages/ComidasDetalhes';\nimport Explorar from '../pages/Explorar';\nimport ExplorarBebidas from '../pages/ExplorarBebidas';\nimport ExplorarComidas from '../pages/ExplorarComidas';\nimport ExplorarComidasArea from '../pages/ExplorarComidasArea';\nimport ExplorarIngredientes from '../pages/ExplorarIngredients';\nimport Login from '../pages/Login';\nimport Perfil from '../pages/Perfil';\nimport Progresso from '../pages/Progresso';\nimport Receitas from '../pages/Receitas';\nimport ReceitasFavoritas from '../pages/ReceitasFavoritas';\nimport ReceitasFeitas from '../pages/ReceitasFeitas';\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={ Login } />\n      <Route path=\"/comidas/:id/in-progress\" component={ Progresso } />\n      <Route path=\"/comidas/:id\" component={ ComidasDetalhes } />\n      <Route path=\"/comidas\" component={ Receitas } />\n\n      <Route path=\"/bebidas/:id/in-progress\" component={ Progresso } />\n      <Route path=\"/bebidas/:id\" component={ BebidasDetalhes } />\n      <Route path=\"/bebidas\" component={ Receitas } />\n\n      <Route\n        path=\"/explorar/comidas/ingredientes\"\n        component={ ExplorarIngredientes }\n      />\n      <Route\n        path=\"/explorar/bebidas/ingredientes\"\n        component={ ExplorarIngredientes }\n      />\n      <Route path=\"/explorar/bebidas\" component={ ExplorarBebidas } />\n      <Route path=\"/explorar/comidas/area\" component={ ExplorarComidasArea } />\n      <Route path=\"/explorar/comidas\" component={ ExplorarComidas } />\n      <Route path=\"/explorar\" component={ Explorar } />\n\n      <Route path=\"/perfil\" component={ Perfil } />\n\n      <Route path=\"/receitas-feitas\" component={ ReceitasFeitas } />\n      <Route path=\"/receitas-favoritas\" component={ ReceitasFavoritas } />\n    </Switch>\n  );\n}\n\nexport default Router;\n","import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport fetchApi from '../utils/FetchApi';\nimport RecipesContext from './RecipesContext';\n\nconst RecipesProvider = ({ children }) => {\n  const [loading, setLoading] = useState(true);\n  const [recipeType, setRecipeType] = useState('comida');\n  const [recipes, setRecipes] = useState([]);\n\n  const getRecipes = async (options = {}) => {\n    setLoading(true);\n    const json = await fetchApi(options);\n    setRecipes(Object.values(json)[0]);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getRecipes();\n  }, []);\n\n  return (\n    <RecipesContext.Provider\n      value={ {\n        loading,\n        recipeType,\n        recipes,\n        setLoading,\n        setRecipeType,\n        setRecipes,\n      } }\n    >\n      { children }\n    </RecipesContext.Provider>\n  );\n};\n\nRecipesProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default RecipesProvider;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Router from './services/Router';\nimport RecipesProvider from './context/RecipesProvider';\nimport { initLsData } from './redux/actions';\nimport './App.css';\n\nfunction App() {\n  // hydrate Redux store from localStorage\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(initLsData());\n  }, [dispatch]);\n\n  return (\n    <RecipesProvider>\n      <Router />\n    </RecipesProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}